parameters:
  - name: Artifact
    type: object
    default: {}
  - name: ArtifactName
    type: string
    default: "not-specified"
  - name: RetryLimit
    type: number
    default: 30

steps:
  - download: current
    artifact: ${{parameters.ArtifactName}}-signed
  - template: /eng/pipelines/templates/steps/install-reporting-tools.yml
  - pwsh: |
      # Write-Host "Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{parameters.Artifact.groupId}}/${{parameters.Artifact.name}}/" "$(Pipeline.Workspace)/install-check-dir/${{parameters.Artifact.name}} -Recurse"
      # Copy-Item "${{parameters.ArtifactName}}-signed/${{parameters.Artifact.groupId}}/${{parameters.Artifact.name}}/" "install-check-dir/${{parameters.Artifact.name}}" -Recurse
      # Write-Host "$pomf = Get-ChildItem install-check-dir/${{parameters.Artifact.name}}/*.pom"
      $pomfDir = "$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{parameters.Artifact.groupId}}/${{parameters.Artifact.name}}"
      $pomf = Get-ChildItem "$pomfDir/*.pom"
      Write-Host "Rename-Item $($pomf) pom.xml"
      Rename-Item $pomf pom.xml
      Copy-Item "$(System.DefaultWorkingDirectory)/eng" "$pomfDir/eng" -Recurse

      while ($retries++ -lt ${{parameters.RetryLimit}}) {
        Write-Host "mvn install -DpomFile=$pomfDir $(DefaultOptions) -Dcheckstyle.skip=true"
        mvn install -DpomFile $pomfDir $(DefaultOptions) -Dcheckstyle.skip=true
        if ($LASTEXITCODE) {
          if ($retries -ge ${{parameters.RetryLimit}}) {
            exit $LASTEXITCODE
          }
          Write-Host "Install failed, retrying in 1 minute..."
          sleep 60
        } else {
          break
        }
      }
    workingDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{parameters.Artifact.groupId}}/${{parameters.Artifact.name}}
    displayName: "Verify Package Installation"
